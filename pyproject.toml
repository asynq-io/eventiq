[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eventiq"
dynamic = ["version"]
description = "Publish/Subscribe asyncio framework for Python"
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
keywords = [
    "framework",
    "asyncio",
    "microservice",
    "event-driven",
    "cloud-events",
]
authors = [{ name = "RaRhAeu", email = "rarha_eu@protonmail.com" }]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "anyio>4.0,<5.0",
    "typer",
    "pydantic >2.0,<3",
    "pydantic-settings>2.0,<3",
    "pydantic-asyncapi==0.2.1",
]

[project.urls]
Documentation = "https://github.com/asynq-io/eventiq#readme"
Issues = "https://github.com/asynq-io/eventiq/issues"
Source = "https://github.com/asynq-io/eventiq"

[project.scripts]
eventiq = "eventiq.cli:cli"

[project.optional-dependencies]
nats = ["nats-py"]
rabbitmq = ["aio-pika"]
kafka = ["aiokafka"]
redis = ["redis"]

[tool.hatch.version]
path = "eventiq/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-sugar",
    "pytest-cov",
    "pytest-repeat",
    "pyyaml",
    "ruff==0.5.2",
    "mypy>=1.0.0",
    "bandit",
    "nats-py",
    "aiokafka",
    "aio-pika",
    "redis",
    "watchfiles",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
check = [
    "ruff check ./eventiq",
    "ruff format --check ./eventiq",
    "mypy --install-types --non-interactive --enable-incomplete-feature=Unpack {args:eventiq tests}",
    "bandit -r ./eventiq",
]

[tool.coverage.run]
source_pkgs = ["eventiq", "tests"]
branch = true
parallel = true
omit = ["eventiq/__about__.py"]

[tool.coverage.paths]
package = ["eventiq"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pytest.ini_options]
addopts = "--cov=./eventiq"
testpaths = ["./tests"]
asyncio_mode = "auto"
filterwarnings = "ignore::DeprecationWarning"

[tool.pyright]
venvPath = ".venv"
venv = "eventiq"

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

[tool.ruff]
target-version = "py39"

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "E501", # line too long
]

[tool.bandit]
skips = ['B101']
